#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        f {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        es {
            bindings = <&kp ESCAPE>;
            key-positions = <18 19 20>;
        };

        dfs {
            bindings = <&msc SCRL_UP>;
            key-positions = <6 7 8>;
        };

        dh {
            bindings = <&msc MOVE_Y(5)>;
            key-positions = <30 31 32>;
        };

        wrty {
            bindings = <&kp HOME>;
            key-positions = <6 7 8 9>;
        };

        q3qr {
            bindings = <&kp END>;
            key-positions = <30 31 32 33>;
        };

        wt {
            bindings = <&kp LC(N0)>;
            key-positions = <18 19 20 21>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt NUMBER_1 Q    &mt DOUBLE_QUOTES W  &mt HASH E    &mt DOLLAR R  &mt PERCENT T                                                           &mt AMPERSAND Y  &mt SQT U  &mt LEFT_PARENTHESIS I  &mt RIGHT_PARENTHESIS O  &mt AT P
&kp A             &kp S                &kp D         &kp F         &kp G                   &kp LC(KP_NUMBER_0)            &kp DEL          &kp H            &kp J      &kp K                   &kp L                    &kp MINUS
&mt LEFT_SHIFT Z  &kp X                &kp C         &kp V         &kp B                   &kp LEFT_SHIFT                 &lt 2 BACKSPACE  &lt 1 N          &kp M      &kp COMMA               &kp PERIOD               &kp SLASH
&kp LCTRL         &kp LEFT_WIN         &kp LEFT_ALT  &kp TAB       &mt INT_MUHENKAN SPACE  &mt LANGUAGE_2 LANGUAGE_1      &lt 3 ENTER      &mkp MB1                                                                     &kp DEL
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        FUNCTION {
            bindings = <
&trans  &trans  &trans  &trans  &trans                       &kp K_BACK        &kp LS(LC(TAB))     &kp LG(UP_ARROW)    &kp LC(TAB)          &kp F5
&trans  &trans  &trans  &trans  &trans  &trans      &kp F13  &kp LA(UP_ARROW)  &kp LG(LEFT_ARROW)  &kp LG(D)           &kp LG(RIGHT_ARROW)  &kp SPACE
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans            &kp LEFT_ARROW      &kp LG(DOWN_ARROW)  &kp RIGHT_ARROW      &kp LC(W)
&trans  &trans  &trans  &trans  &trans  &trans      &trans   &trans                                                                         &kp LA(F4)
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp PLUS      &kp N7        &kp N8        &kp N9        &kp N0
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp MINUS     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp KP_MULTIPLY
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &trans          &kp KP_EQUAL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_DIVIDE
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                  &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &trans  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
